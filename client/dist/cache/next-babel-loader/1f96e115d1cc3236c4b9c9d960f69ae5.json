{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport Eth from \"ethjs\";\n\nconst check = () => {\n  const {\n    web3\n  } = window;\n  const foundInWindow = typeof web3 !== \"undefined\";\n\n  if (!foundInWindow) {\n    console.log(`No web3 instance injected.`);\n    return undefined;\n  }\n\n  console.log(`Injected web3 detected.`);\n  return new Eth(web3.currentProvider);\n};\n\nconst getEth = () => {\n  return new _Promise(resolve => {\n    // If document has loaded already, try to get Web3 immediately.\n    if (document.readyState === \"complete\") {\n      return resolve(check());\n    } // Wait for loading completion to avoid race conditions with web3 injection timing.\n\n\n    window.addEventListener(`load`, () => {\n      resolve(check());\n    });\n  });\n};\n\nexport default getEth;","map":{"version":3,"sources":["/home/devlabs-php/Desktop/projects/ambire/bs/solidity-dkim/client/src/models/Eth/getEth.ts"],"names":["Eth","check","web3","window","foundInWindow","console","log","undefined","currentProvider","getEth","resolve","document","readyState","addEventListener"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,OAAhB;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAM;AAAEC,IAAAA;AAAF,MAAWC,MAAjB;AAEA,QAAMC,aAAa,GAAG,OAAOF,IAAP,KAAgB,WAAtC;;AACA,MAAI,CAACE,aAAL,EAAoB;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAa,4BAAb;AACA,WAAOC,SAAP;AACD;;AAEDF,EAAAA,OAAO,CAACC,GAAR,CAAa,yBAAb;AACA,SAAO,IAAIN,GAAJ,CAAQE,IAAI,CAACM,eAAb,CAAP;AACD,CAXD;;AAaA,MAAMC,MAAM,GAAG,MAAM;AACnB,SAAO,aAA6BC,OAAO,IAAI;AAC7C;AACA,QAAIC,QAAQ,CAACC,UAAT,KAAwB,UAA5B,EAAwC;AACtC,aAAOF,OAAO,CAACT,KAAK,EAAN,CAAd;AACD,KAJ4C,CAM7C;;;AACAE,IAAAA,MAAM,CAACU,gBAAP,CAAyB,MAAzB,EAAgC,MAAM;AACpCH,MAAAA,OAAO,CAACT,KAAK,EAAN,CAAP;AACD,KAFD;AAGD,GAVM,CAAP;AAWD,CAZD;;AAcA,eAAeQ,MAAf","sourcesContent":["import Eth from \"ethjs\";\r\n\r\nconst check = () => {\r\n  const { web3 } = window as typeof window & { web3: any };\r\n\r\n  const foundInWindow = typeof web3 !== \"undefined\";\r\n  if (!foundInWindow) {\r\n    console.log(`No web3 instance injected.`);\r\n    return undefined;\r\n  }\r\n\r\n  console.log(`Injected web3 detected.`);\r\n  return new Eth(web3.currentProvider);\r\n};\r\n\r\nconst getEth = () => {\r\n  return new Promise<any | undefined>(resolve => {\r\n    // If document has loaded already, try to get Web3 immediately.\r\n    if (document.readyState === \"complete\") {\r\n      return resolve(check());\r\n    }\r\n\r\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\r\n    window.addEventListener(`load`, () => {\r\n      resolve(check());\r\n    });\r\n  });\r\n};\r\n\r\nexport default getEth;\r\n"]},"metadata":{},"sourceType":"module"}