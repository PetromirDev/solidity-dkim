{"ast":null,"code":"const definitions = {\n  DKIM: null\n};\n\nconst getContract = async (eth, name) => {\n  if (!definitions[name]) {\n    const data = await import(`../../../contracts/${name}.json`);\n    definitions[name] = data;\n  }\n\n  const networkId = Number(eth.currentProvider.networkVersion);\n  const networkData = definitions[name].networks[networkId];\n\n  if (!networkData) {\n    throw Error(\"contract address not found\");\n  }\n\n  const contract = new eth.contract(definitions[name].abi);\n  return contract.at(networkData.address);\n};\n\nexport { getContract };","map":{"version":3,"sources":["/home/devlabs-php/Desktop/projects/ambire/bs/solidity-dkim/src/models/Eth/getContract.ts"],"names":["definitions","DKIM","getContract","eth","name","data","networkId","Number","currentProvider","networkVersion","networkData","networks","Error","contract","abi","at","address"],"mappings":"AAAA,MAAMA,WAAW,GAAG;AAClBC,EAAAA,IAAI,EAAE;AADY,CAApB;;AAIA,MAAMC,WAAW,GAAG,OAAOC,GAAP,EAAiBC,IAAjB,KAAoD;AACtE,MAAI,CAACJ,WAAW,CAACI,IAAD,CAAhB,EAAwB;AACtB,UAAMC,IAAI,GAAG,MAAM,OAAQ,sBAAqBD,IAAK,OAAlC,CAAnB;AAEAJ,IAAAA,WAAW,CAACI,IAAD,CAAX,GAAoBC,IAApB;AACD;;AAED,QAAMC,SAAS,GAAGC,MAAM,CAACJ,GAAG,CAACK,eAAJ,CAAoBC,cAArB,CAAxB;AACA,QAAMC,WAAW,GAAGV,WAAW,CAACI,IAAD,CAAX,CAAkBO,QAAlB,CAA2BL,SAA3B,CAApB;;AAEA,MAAI,CAACI,WAAL,EAAkB;AAChB,UAAME,KAAK,CAAC,4BAAD,CAAX;AACD;;AAED,QAAMC,QAAQ,GAAG,IAAIV,GAAG,CAACU,QAAR,CAAiBb,WAAW,CAACI,IAAD,CAAX,CAAkBU,GAAnC,CAAjB;AAEA,SAAOD,QAAQ,CAACE,EAAT,CAAYL,WAAW,CAACM,OAAxB,CAAP;AACD,CAjBD;;AAmBA,SAASd,WAAT","sourcesContent":["const definitions = {\r\n  DKIM: null\r\n};\r\n\r\nconst getContract = async (eth: any, name: keyof typeof definitions) => {\r\n  if (!definitions[name]) {\r\n    const data = await import(`../../../contracts/${name}.json`);\r\n\r\n    definitions[name] = data;\r\n  }\r\n\r\n  const networkId = Number(eth.currentProvider.networkVersion);\r\n  const networkData = definitions[name].networks[networkId];\r\n\r\n  if (!networkData) {\r\n    throw Error(\"contract address not found\");\r\n  }\r\n\r\n  const contract = new eth.contract(definitions[name].abi);\r\n\r\n  return contract.at(networkData.address);\r\n};\r\n\r\nexport { getContract };\r\n"]},"metadata":{},"sourceType":"module"}